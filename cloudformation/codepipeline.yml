AWSTemplateFormatVersion: 2010-09-09
Description: Creates a pipeline that deploys our API

Parameters:
  ProjectName:
    Type: String
  S3Bucket:
    Type: String
  RoleArn:
    Type: String
  RepoOwner:
    Type: String
  RepoName:
    Type: String
  BranchName:
    Type: String
  GithubOAuthToken:
    Type: String

Resources:
  CodeBuildLambda:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/codebuild-project.yml
      Parameters:
        ProjectName: !Ref ProjectName
        BuildStep: lambda-build
        BuildspecFile: buildspecs/lambda-build.yml
        RoleArn: !Ref RoleArn
        S3Bucket: !Ref S3Bucket
  
  CodeBuildTest:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/codebuild-project.yml
      Parameters:
        ProjectName: !Ref ProjectName
        BuildStep: unit-test
        BuildspecFile: buildspecs/unit-test.yml
        RoleArn: !Ref RoleArn
        S3Bucket: !Ref S3Bucket
  
  CodeBuildLint:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3Bucket}.s3.amazonaws.com/codebuild-project.yml
      Parameters:
        ProjectName: !Ref ProjectName
        BuildStep: lint
        BuildspecFile: buildspecs/lint.yml
        RoleArn: !Ref RoleArn
        S3Bucket: !Ref S3Bucket

  MyPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-pipeline
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
      RoleArn: !Ref RoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: GetSource
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: source-out
              Configuration:
                Owner: !Ref RepoOwner
                Repo: !Ref RepoName
                Branch: !Ref BranchName
                OAuthToken: !Ref GithubOAuthToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Test
              InputArtifacts:
                - Name: source-out
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: test-out
              Configuration:
                ProjectName: !GetAtt CodeBuildTest.Outputs.BuildProject
              RunOrder: 1

            - Name: Lint
              InputArtifacts:
                - Name: source-out
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: lint-out
              Configuration:
                ProjectName: !GetAtt CodeBuildLint.Outputs.BuildProject
              RunOrder: 1

            - Name: LambdaBuild
              InputArtifacts:
                - Name: source-out
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              OutputArtifacts:
                - Name: lambda-build-out
              Configuration:
                ProjectName: !GetAtt CodeBuildLambda.Outputs.BuildProject
              RunOrder: 2

  WebhookPipeline:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Name: !Sub ${ProjectName}-webhook
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GithubOAuthToken
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: !Sub refs/heads/${BranchName}
      TargetPipeline: !Ref MyPipeline
      TargetAction: GetSource
      TargetPipelineVersion: !GetAtt MyPipeline.Version
